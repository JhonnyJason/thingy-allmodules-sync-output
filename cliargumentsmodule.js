// Generated by CoffeeScript 2.6.1
//#############################################################################
//region debug
var extractMeowed, getHelpText, getOptions, log, olog, throwErrorOnUsageFail;

import {
  createLogFunctions
} from "thingy-debug";

({log, olog} = createLogFunctions("cliargumentsmodule"));

import meow from 'meow';

//###############################################################################
//region internal functions
getHelpText = function() {
  log("getHelpText");
  return `Usage
    $ thingy-allmodules-sync <arg1>

Options
    optional:
        arg1, --thingy-path <path/to/thingy>, -p <path/to/thingy> [default: ./ ]
            path to the root of the thingy. Usually it is cwd. Use it if you call this script from somewhere else.

TO NOTE:
    The flags will overwrite the flagless argument.
Examples
    $ thingy-allmodules-sync 
    ...`;
};

getOptions = function() {
  log("getOptions");
  return {
    importMeta: import.meta,
    flags: {
      thingyPath: {
        type: "string",
        alias: "p"
      }
    }
  };
};

extractMeowed = function(meowed) {
  var style, thingyPath;
  log("extractMeowed");
  thingyPath = "";
  style = "";
  if (meowed.input[0]) {
    thingyPath = meowed.input[0];
  }
  if (meowed.flags.thingyPath) {
    thingyPath = meowed.flags.thingyPath;
  }
  if (!thingyPath) {
    thingyPath = ".";
  }
  return {thingyPath};
};

throwErrorOnUsageFail = function(extract) {
  log("throwErrorOnUsageFail");
  if (!extract.thingyPath) {
    throw "fatal error: no default thingyPath was not available as fallback!";
  }
  if (!(typeof extract.thingyPath === "string")) {
    throw "Usage error: option thingyPath was provided in an unexpected way!";
  }
};


//endregion

//###############################################################################
//region exposed functions
export var extractArguments = function() {
  var extract, meowed;
  log("extractArguments");
  meowed = meow(getHelpText(), getOptions());
  extract = extractMeowed(meowed);
  throwErrorOnUsageFail(extract);
  return extract;
};

//endregion
